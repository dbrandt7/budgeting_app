BACKEND:

Help from:
	http://samueldavies.net/2017/09/16/how-to-setup-a-graphql-server-in-elixir-using-abinsthe/
	https://ryanswapp.com/2016/12/03/phoenix-graphql-tutorial-with-phoenix-add-crud-using-mutations/

Started backend with this command:
mix phx.new budgeting_be --database postgres --no-brunch --no-html .

Add Absinthe dependencies:
{:absinthe, "~> 1.4.9"},
{:absinthe_ecto, "~> 0.1.3"},
{:absinthe_plug, "~> 1.4.2"}

Generate schemas:
mix phx.gen.schema User users name:string email:string password:string
mix phx.gen.schema TransactionType transaction_types name:string
mix phx.gen.schema Transaction transactions user_id:references:users transaction_type_id:references:transaction_types details:string date:utc_datetime amount:decimal
mix ecto.create
mix ecto.migrate

Add data from seeds
mix run priv/repo/seeds.exs

Reset all data:
mix ecto.reset

Start server:
mix phx.server


FRONTEND:

Help from:
	http://www.petecorey.com/blog/2017/04/03/using-create-react-app-with-phoenix/?from=east5th.co
	https://www.howtographql.com/react-apollo/1-getting-started/

Started frontend with command:
create-react-app budgeting_fe

Add apollo dependency:
yarn add apollo-client-preset react-apollo graphql-tag graphql

curl -d '{"query":"query Users {\n  users {\n    id\n    name\n    email\n  }\n}","operationName":"Users"}' -H "Content-Type: application/json" -X POST http://localhost:4000/graphiql



